name: Build binaries

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            task: linuxX64Binaries            
          - os: macos-latest
            task: macosX64Binaries

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew ${{ matrix.task }}

    - name: Archive binaries
      uses: actions/upload-artifact@v1
      with:
        name: binary(${{ matrix.task }})
        path: build/bin

    - name: Download binaries
      uses: actions/download-artifact@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        name: binary(${{ matrix.task }})
        path: binary-${{ matrix.task }}.zip


  publish:
    runs-on: [ubuntu-latest]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download binaries (MacOS)
      uses: actions/download-artifact@v1
      with:
        name: binary(macosX64Binaries)
        path: binary-macosX64Binaries.zip
    - name: Download binaries (Linux)
      uses: actions/download-artifact@v1
      with:
        name: binary(linuxX64Binaries)
        path: binary-linuxX64Binaries.zip

    - name: create tarball
      run: |
        tar cvzf binary-macosX64Binaries.tgz -C binary-macosX64Binaries/build .
        tar cvzf binary-linuxX64Binaries.tgz -C binary-linuxX64Binaries/build .

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release assets (MacOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: binary-macosX64Binaries.tgz
        asset_name: binary-macosX64Binaries.tgz
        asset_content_type: application/gzip
    - name: Upload release assets (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: binary-linuxX64Binaries.tgz
        asset_name: binary-linuxX64Binaries.tgz
        asset_content_type: application/gzip
